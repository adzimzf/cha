name: 'publish'

on:
  push:
    tags:
      - v*
#  pull_request:
#    branches: [ main ]
#    types:
#      - opened
#      - synchronize
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: 'build -- --target aarch64-apple-darwin'
            rust-target: aarch64-apple-darwin,x86_64-apple-darwin
          - platform: 'macos-latest' # for Intel based macs.
            args: 'build -- --target x86_64-apple-darwin'
            rust-target: aarch64-apple-darwin,x86_64-apple-darwin
          - platform: 'ubuntu-22.04'
            target: 'android'
            args: 'android build'
            rust-target: aarch64-linux-android,armv7-linux-androideabi,i686-linux-android,x86_64-linux-android

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.3

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-target }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.
      - name: Setup Java
        if: matrix.target == 'android'
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Setup Android SDK
        if: matrix.target == 'android'
        uses: android-actions/setup-android@v3

      - name: Install NDK
        if: matrix.target == 'android'
        run: sdkmanager "ndk;27.0.11902837"

      - name: Extract android signing key from env
        if: matrix.target == 'android'
        run: |
          echo "${{ secrets.ANDROID_RELEASE_KEYSTORE }}" > src-tauri/gen/android/release.jks.base64
          base64 -d src-tauri/gen/android/release.jks.base64 > src-tauri/gen/android/release.decrypted.jks
          cat <<EOF > src-tauri/gen/android/keystore.properties
          password=${{ secrets.ANDROID_RELEASE_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_RELEASE_KEY }}
          storeFile=${PWD}/src-tauri/gen/android/release.decrypted.jks
          EOF

      - name: Install frontend dependencies
        run: npm install # change this to npm, pnpm or bun depending on which one you use.

      - name: Build frontend
        run: npm run build

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install tauri-cli
        if: matrix.target == 'android'
        run: cargo install tauri-cli --version "2.0.0" --locked

      - name: Build app
        env:
          NDK_HOME: ${{ env.ANDROID_HOME }}/ndk/27.0.11902837
        run: |
          npm run tauri ${{matrix.args}}

      - name: Get version
        id: package-version
        run: |
          latest_tag=$(git tag --list "v[0-9]*.[0-9]*.[0-9]*" --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          if [ -z "$latest_tag" ]; then
            echo "latest-version=v0.0.0" >> $GITHUB_OUTPUT
          else
           echo "latest-version=$latest_tag" >> $GITHUB_OUTPUT
          fi

      - name: Rename Bundle
        if: matrix.target == 'android'
        run: |
          mkdir ./release-assets
          mv ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release.apk ./release-assets/Chatbox_CE_${{steps.package-version.outputs.latest-version}}.apk

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          name: Chatbox CE ${{ steps.package-version.outputs.latest-version}}
          tag_name: ${{ steps.package-version.outputs.latest-version}}
          generate_release_notes: true
          files: |
            ./release-assets/* 
            ./src-tauri/target/*/release/bundle/dmg/*.dmg